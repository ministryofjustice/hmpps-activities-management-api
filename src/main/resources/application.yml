info.app:
  name: Hmpps Activities Management Api
  version: 1.0

spring:
  application:
    name: hmpps-activities-management-api
  codec:
    max-in-memory-size: 10MB

  jackson:
    date-format: "yyyy-MM-dd HH:mm:ss"
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    mapper:
      ACCEPT_CASE_INSENSITIVE_ENUMS: true

  profiles:
    group:
      test:
        - "stdout"

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${hmpps.auth.url}/.well-known/jwks.json
      client:
        registration:
          prison-api:
            provider: hmpps-auth
            client-id: ${system.client.id}
            client-secret: ${system.client.secret}
            authorization-grant-type: client_credentials
            scope: read,write
          prisoner-search-api:
            provider: hmpps-auth
            client-id: ${system.client.id}
            client-secret: ${system.client.secret}
            authorization-grant-type: client_credentials
            scope: read
        provider:
          hmpps-auth:
            token-uri: ${hmpps.auth.url}/oauth/token

  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
      jdbc:
        batch_size: 100
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: none

  datasource:
    url: 'jdbc:postgresql://${DB_SERVER}/${DB_NAME}?sslmode=${DB_SSL_MODE}'
    username: ${DB_USER}
    password: ${DB_PASS}
    hikari:
      pool-name: Activities-DB-CP
      connectionTimeout: 1000
      validationTimeout: 500

  flyway:
    locations: classpath:/migrations/common,classpath:/migrations/prod
    placeholders:
      dpr_user: ${DPR_USER}
      dpr_password: ${DPR_PASSWORD}

server:
  port: 8080
  servlet:
    context-path: /
  forward-headers-strategy: native
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
      internal-proxies: 10\.\d{1,3}\.\d{1,3}\.\d{1,3}|192\.168\.\d{1,3}\.\d{1,3}|169\.254\.\d{1,3}\.\d{1,3}|127\.\d{1,3}\.\d{1,3}\.\d{1,3}|172\.1[6-9]{1}\.\d{1,3}\.\d{1,3}|172\.2[0-9]{1}\.\d{1,3}\.\d{1,3}|172\.3[0-1]{1}\.\d{1,3}\.\d{1,3}|0:0:0:0:0:0:0:1|::1|100\.6[4-9]\.\d{1,3}\.\d{1,3}|100\.[7-9][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.1[0-1][0-9]{1}\.\d{1,3}\.\d{1,3}|100\.12[0-7]\.\d{1,3}\.\d{1,3}
  shutdown: graceful
  error:
    include-message: always

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-components: always
      show-details: always
      probes:
        enabled: true
    info:
      cache:
        time-to-live: 2000ms

prison:
  api:
    timeout: 10s

jobs:
  create-scheduled-instances:
    days-in-advance: ${SCHEDULE_AHEAD_DAYS}

online:
  create-scheduled-instances:
    days-in-advance: ${SCHEDULE_AHEAD_DAYS_ONLINE}

springdoc:
  swagger-ui:
    tags-sorter: alpha