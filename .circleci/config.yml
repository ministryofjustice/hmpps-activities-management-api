version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@11
  codecov: codecov/codecov@3

parameters:
  alerts-slack-channel:
    type: string
    default: activities-and-appointments-alerts-security
  releases-slack-channel:
    type: string
    default: activities-and-appointments-dev
  java-version:
    type: string
    default: "21.0"
  postgres-version:
    type: string
    default: "17"
  localstack-version:
    type: string
    default: "3"

jobs:
  validate:
    executor:
      name: hmpps/java
      tag: << pipeline.parameters.java-version >>
    resource_class: medium+
    environment:
      _JAVA_OPTIONS: -Xmx2048m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          command: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" check
      - codecov/upload:
          file: build/reports/jacoco/test/jacocoTestReport.xml
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: build/reports/jacoco

  integration-test:
    parallelism: 4
    executor:
      name: hmpps/java_localstack_postgres
      jdk_tag: << pipeline.parameters.java-version >>
      localstack_tag: << pipeline.parameters.localstack-version >>
      services: "sns,sqs,s3"
      postgres_tag: << pipeline.parameters.postgres-version >>
      postgres_username: "activities"
      postgres_password: "activities"
    resource_class: large
    environment:
      AWS_S3_AP_BUCKET: defaultbucket
      AWS_S3_AP_PROJECT: defaultproject
      _JAVA_OPTIONS: -Xmx2048m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - hmpps/wait_till_ready_postgres
      - hmpps/wait_till_ready
      - run:
          command: |
            cd src/test/kotlin 
            # Get list of classnames of tests that should run on this node
            CLASSNAMES=$(circleci tests glob "**/integration/**/*Test.kt" \
              | cut -c 1- | sed 's@/@.@g' \
              | sed 's/.\{3\}$//' \
              | circleci tests split --split-by=timings)
            cd ../../..
            # Format the arguments to "./gradlew test"
            GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
            echo "Prepared arguments for Gradle: $GRADLE_ARGS"
            ./gradlew integrationTest --build-cache $GRADLE_ARGS
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

workflows:
  version: 2
